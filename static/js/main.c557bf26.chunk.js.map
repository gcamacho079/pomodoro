{"version":3,"sources":["Firebase.js","styleSettings.js","style.js","components/Navigation.js","utils/formatTime.js","components/Timer.js","utils/getNewValue.js","components/TimerConfig.js","beep.wav","utils/capitalizeFirstLetter.js","pages/Pomodoro.js","components/FormError.js","pages/Login.js","pages/Register.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","GoogleAuthProvider","styleSettings","colors","primary","secondary","fonts","heading","body","fontSize","units","spacer","spacer_large","spacer_small","Nav","styled","nav","NavList","ul","Main","main","Button","button","TimeControls","div","Label","label","Input","input","ErrorMessage","ControlRow","TimerLabel","h2","ButtonRow","TimerCountdown","TimerWrapper","Form","form","Navigation","props","user","logoutUser","to","displayName","onClick","addLeadingZeroes","value","string","slice","formatTime","totalSeconds","minutes","Math","floor","seconds","minutesString","secondsString","Timer","id","activeSessionType","remainingTime","handleResetClick","handleStartStopClick","timerIsActive","getNewValue","currentValue","action","newValue","labelText","getStateProperty","property","includes","getInputMin","parseInt","getAttribute","getInputMax","TimerConfig","handleClick","bind","handleChange","event","target","stateProp","valueInt","this","onIntervalChange","Number","isNaN","inputMin","inputMax","dataset","targetInput","parentNode","querySelector","errorMessage","htmlFor","data-action","aria-label","onChange","min","max","type","breakLength","sessionLength","React","Component","capitalizeFirstLetter","s","charAt","toUpperCase","interval","INITIAL_INTERVALS","PomodoroWrapper","PomodoroInner","Heading","h1","Pomodoro","state","timer","handleCountdown","document","title","rewindAudio","setState","clearInterval","play","audioElement","pause","currentTime","newRemainingTime","nextSessionType","getNextSessionType","lengthKey","playAudio","autoplayAudio","setInterval","resetTimer","timerLengthsAreValid","pauseTimer","activateTimer","src","soundUrl","FormError","message","Login","email","password","handleSubmit","name","preventDefault","signInWithEmailAndPassword","then","userCredential","logInUser","navigate","catch","error","onSubmit","className","placeholder","required","Register","passwordConfirm","itemName","registrationInfo","createUserWithEmailAndPassword","registerUser","App","userID","signOut","uid","onAuthStateChanged","updateProfile","path","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c557bf26.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/database';\nimport 'firebase/auth';\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyB3IGRdix8_8mM3CEPRG12usjPseUjXSaI',\n  authDomain: 'pomodoro-d279a.firebaseapp.com',\n  databaseURL: 'https://pomodoro-d279a-default-rtdb.firebaseio.com',\n  projectId: 'pomodoro-d279a',\n  storageBucket: 'pomodoro-d279a.appspot.com',\n  messagingSenderId: '1059448598414',\n  appId: '1:1059448598414:web:955bbba7477f728ebd7edf',\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport const provider = new firebase.auth.GoogleAuthProvider();\nexport const auth = firebase.auth();\nexport default firebase;\n","const styleSettings = {\n  colors: {\n    primary: '#FFDDFF',\n    secondary: '#c0fdff',\n  },\n  fonts: {\n    heading: 'Rakkas, serif',\n    body: 'Cairo, sans-serif',\n    fontSize: '1.2rem',\n  },\n  units: {\n    spacer: '30px',\n    spacer_large: '60px',\n    spacer_small: '15px',\n  },\n};\n\nexport default styleSettings;\n","import styled from 'styled-components';\nimport styleSettings from './styleSettings';\n\nexport const Nav = styled.nav`\n  font-family: ${styleSettings.fonts.body};\n  background-color: ${styleSettings.colors.secondary};\n  border-bottom: 3px solid black;\n`;\n\nexport const NavList = styled.ul`\n  display: flex;\n  margin: 0;\n  padding: ${styleSettings.units.spacer_small};\n  list-style-type: none;\n\n  & > * + * {\n    margin-left: ${styleSettings.units.spacer_small};\n  }\n\n  a {\n    text-decoration: none;\n    color: black;\n  }\n`;\n\nexport const Main = styled.main`\n  font-family: ${styleSettings.fonts.body};\n  width: 100%;\n  min-height: 100vh;\n  background-color: ${styleSettings.colors.primary};\n  color: #000000;\n  padding: 30px;\n`;\n\nexport const Button = styled.button`\n  background-color: transparent;\n  color: black;\n  border-color: black;\n  border-width: 3px;\n  padding: 5px;\n  letter-spacing: 1.5px;\n  text-transform: uppercase;\n  font-size: 1.5rem;\n  font-weight: 700;\n  font-family: ${styleSettings.fonts.body};\n  cursor: pointer;\n`;\n\nexport const TimeControls = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n`;\n\nexport const Label = styled.label`\n  text-align: center;\n  display: block;\n  margin-bottom: ${styleSettings.units.spacer_small};\n`;\n\nexport const Input = styled.input`\n  border: none;\n  border-top: 3px solid black;\n  border-bottom: 3px solid black;\n  padding: 10px;\n  text-align: center;\n  font-size: 1.2rem;\n  font-family: inherit;\n  appearance: none;\n`;\n\nexport const ErrorMessage = styled.div`\n  margin: ${styleSettings.units.spacer} 0;\n  font-weight: 700;\n  text-align: center;\n`;\n\nexport const ControlRow = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-column-gap: ${styleSettings.units.spacer};\n`;\n\nexport const TimerLabel = styled.h2`\n  text-align: center;\n`;\n\nexport const ButtonRow = styled.div`\n  display: grid;\n  grid-column-gap: 30px;\n  grid-template-columns: 1fr 1fr;\n`;\n\nexport const TimerCountdown = styled.div`\n  margin: ${styleSettings.units.spacer} 0;\n  font-size: 48px;\n  text-align: center;\n`;\n\nexport const TimerWrapper = styled.div`\n  margin: ${styleSettings.units.spacer_large} 0;\n`;\n\nexport const Form = styled.form`\n  display: grid;\n  max-width: 600px;\n  margin: 0 auto;\n  grid-row-gap: 10px;\n  input {\n    font-family: ${styleSettings.fonts.body};\n    padding: 10px;\n  }\n\n  button {\n    background-color: transparent;\n    font-family: ${styleSettings.fonts.body};\n    font-size: 1.5rem;\n    border: 2px solid black;\n  }\n`;\n","import React from 'react';\nimport { Link } from '@reach/router';\nimport { Nav, NavList } from '../style';\n\nconst Navigation = (props) => {\n  const { user, logoutUser } = props;\n  return (\n    <Nav>\n      <NavList>\n        <li>\n          <Link to=\"/\">Home</Link>\n        </li>\n        {!user && (\n          <li>\n            <Link to=\"/login\">Login</Link>\n          </li>\n        )}\n        {user && (\n          <li>\n            <span>Welcome back, {user.displayName}. </span>\n            <Link onClick={logoutUser} to=\"/logout\">\n              Logout\n            </Link>\n          </li>\n        )}\n        {!user && (\n          <li>\n            <Link to=\"/register\">Register</Link>\n          </li>\n        )}\n      </NavList>\n    </Nav>\n  );\n};\n\nexport default Navigation;\n","const addLeadingZeroes = (value) => {\n  let string = value + '';\n  string = '00' + string;\n  const finalDigits = string.slice(-2);\n  return finalDigits;\n};\n\nconst formatTime = (totalSeconds) => {\n  const minutes = Math.floor(totalSeconds / 60);\n  const seconds = totalSeconds % 60;\n\n  const minutesString = addLeadingZeroes(minutes);\n  const secondsString = addLeadingZeroes(seconds);\n\n  const timeString = `${minutesString}:${secondsString}`;\n  return timeString;\n};\n\nexport default formatTime;\n","import {\n  Button,\n  TimerLabel,\n  ButtonRow,\n  TimerCountdown,\n  TimerWrapper,\n} from '../style';\nimport formatTime from '../utils/formatTime';\n\nconst Timer = (props) => {\n  return (\n    <TimerWrapper>\n      <TimerLabel id=\"timer-label\">\n        {props.activeSessionType === 'session' ? 'Session' : 'Break'}\n      </TimerLabel>\n      <TimerCountdown id=\"time-left\">\n        {formatTime(props.remainingTime)}\n      </TimerCountdown>\n      <ButtonRow>\n        <Button onClick={props.handleResetClick} id=\"reset\">\n          Reset\n        </Button>\n        <Button onClick={props.handleStartStopClick} id=\"start_stop\">\n          {props.timerIsActive ? 'Stop' : 'Start'}\n        </Button>\n      </ButtonRow>\n    </TimerWrapper>\n  );\n};\n\nexport default Timer;\n","const getNewValue = (currentValue, action) => {\n  let newValue;\n  switch(action) {\n    case 'increment':\n      newValue = currentValue + 1;\n      break;\n    case 'decrement':\n      newValue = currentValue - 1;\n      break;\n    default:\n      newValue = currentValue;\n  }\n  return newValue;\n};\n\nexport default getNewValue;\n","import React from 'react';\nimport getNewValue from '../utils/getNewValue';\nimport {\n  Button,\n  TimeControls,\n  Label,\n  ErrorMessage,\n  ControlRow,\n  Input,\n} from '../style';\n\nexport const labelText = {\n  increment: 'Add 1 minute',\n  decrement: 'Remove 1 minute',\n};\n\nconst getStateProperty = (id) => {\n  let property = '';\n\n  if (id.includes('break')) {\n    property = 'breakLength';\n  } else if (id.includes('session')) {\n    property = 'sessionLength';\n  }\n\n  return property;\n};\n\nconst getInputMin = (input) => parseInt(input.getAttribute('min'), 10);\n\nconst getInputMax = (input) => parseInt(input.getAttribute('max'), 10);\nclass TimerConfig extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    const { target } = event;\n    const stateProp = getStateProperty(target.id);\n    const { value } = target;\n    const valueInt = parseInt(value, 10);\n\n    // Allow user to delete input entirely and type from scratch\n    // (TODO: handle error in Pomodoro component)\n    if (value === '') return this.props.onIntervalChange(stateProp, value);\n\n    // Do nothing if input is non-empty string\n    if (Number.isNaN(valueInt)) return this.props[stateProp];\n\n    const inputMin = getInputMin(target);\n    const inputMax = getInputMax(target);\n\n    if (valueInt < inputMin || valueInt > inputMax) return;\n\n    this.props.onIntervalChange(stateProp, valueInt);\n  }\n\n  handleClick(event) {\n    const { target } = event;\n    const { action } = target.dataset;\n    const parentNode = target.parentNode;\n    const targetInput = parentNode.querySelector('input');\n    const stateProp = getStateProperty(target.id);\n    const newValue = getNewValue(this.props[stateProp], action);\n    const inputMin = getInputMin(targetInput);\n    const inputMax = getInputMax(targetInput);\n\n    if (newValue < inputMin || newValue > inputMax) return;\n\n    this.props.onIntervalChange(stateProp, newValue);\n  }\n\n  render() {\n    return (\n      <>\n        <ErrorMessage>{this.props.errorMessage}</ErrorMessage>\n        <ControlRow>\n          <div>\n            <Label id=\"break-label\" htmlFor=\"break-length\">\n              Break Length\n            </Label>\n            <TimeControls>\n              <Button\n                onClick={this.handleClick}\n                data-action=\"decrement\"\n                id=\"break-decrement\"\n                aria-label={labelText.decrement}\n              >\n                -\n              </Button>\n              <Input\n                onChange={this.handleChange}\n                min=\"1\"\n                max=\"60\"\n                type=\"number\"\n                id=\"break-length\"\n                value={this.props.breakLength}\n              />\n              <Button\n                onClick={this.handleClick}\n                data-action=\"increment\"\n                id=\"break-increment\"\n                aria-label={labelText.increment}\n              >\n                +\n              </Button>\n            </TimeControls>\n          </div>\n          <div>\n            <Label id=\"session-label\" htmlFor=\"session-length\">\n              Session Length\n            </Label>\n            <TimeControls>\n              <Button\n                onClick={this.handleClick}\n                data-action=\"decrement\"\n                id=\"session-decrement\"\n                aria-label={labelText.decrement}\n              >\n                -\n              </Button>\n              <Input\n                onChange={this.handleChange}\n                min=\"1\"\n                max=\"60\"\n                type=\"number\"\n                id=\"session-length\"\n                value={this.props.sessionLength}\n              />\n              <Button\n                onClick={this.handleClick}\n                data-action=\"increment\"\n                id=\"session-increment\"\n                aria-label={labelText.increment}\n              >\n                +\n              </Button>\n            </TimeControls>\n          </div>\n        </ControlRow>\n      </>\n    );\n  }\n}\n\nexport default TimerConfig;\n","export default __webpack_public_path__ + \"static/media/beep.0be65f23.wav\";","const capitalizeFirstLetter = (s) => {\n  return s.charAt(0).toUpperCase() + s.slice(1);\n};\n\nexport default capitalizeFirstLetter;\n","import React from 'react';\nimport Timer from '../components/Timer';\nimport TimerConfig from '../components/TimerConfig';\nimport soundUrl from '../beep.wav';\nimport styled from 'styled-components';\nimport styleSettings from '../styleSettings';\nimport formatTime from '../utils/formatTime';\nimport capitalizeFirstLetter from '../utils/capitalizeFirstLetter';\n\nconst INITIAL_INTERVALS = {\n  sessionLength: 25,\n  breakLength: 5,\n};\n\nlet interval;\n\nconst PomodoroWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst PomodoroInner = styled.div`\n  width: 100%;\n  max-width: 600px;\n`;\n\nconst Heading = styled.h1`\n  text-align: center;\n  font-size: 48px;\n  font-family: ${styleSettings.fonts.heading};\n  letter-spacing: 3px;\n`;\n\nclass Pomodoro extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeSessionType: 'session',\n      breakLength: 5,\n      errorMessage: '',\n      sessionLength: 25,\n      remainingTime: 1500,\n      timerIsActive: false,\n      timer: null,\n    };\n\n    this.onIntervalChange = this.onIntervalChange.bind(this);\n    this.handleCountdown = this.handleCountdown.bind(this);\n    this.handleStartStopClick = this.handleStartStopClick.bind(this);\n    this.handleResetClick = this.handleResetClick.bind(this);\n  }\n\n  resetTimer(resetToInitial = false) {\n    document.title = 'Pomodoro';\n    this.rewindAudio();\n    this.setState(\n      {\n        timerIsActive: false,\n        remainingTime: this.state.sessionLength * 60,\n        activeSessionType: 'session',\n      },\n      () => {\n        clearInterval(interval);\n      }\n    );\n  }\n\n  pauseTimer() {\n    this.setState(\n      {\n        timerIsActive: false,\n      },\n      () => {\n        clearInterval(interval);\n      }\n    );\n  }\n\n  playAudio() {\n    const audioElement = document.querySelector('#beep');\n    audioElement.play();\n  }\n\n  rewindAudio() {\n    const audioElement = document.querySelector('#beep');\n    audioElement.pause();\n    audioElement.currentTime = 0;\n  }\n\n  getNextSessionType() {\n    switch (this.state.activeSessionType) {\n      case 'session':\n        return 'break';\n      case 'break':\n        return 'session';\n      default:\n        return 'session';\n    }\n  }\n\n  handleCountdown() {\n    if (this.state.remainingTime !== 0) {\n      const { activeSessionType } = this.state;\n      const newRemainingTime = this.state.remainingTime - 1;\n      document.title = `${capitalizeFirstLetter(\n        activeSessionType\n      )}: ${formatTime(newRemainingTime)}`;\n      this.setState({\n        remainingTime: newRemainingTime,\n      });\n    } else {\n      const nextSessionType = this.getNextSessionType();\n      const lengthKey = `${nextSessionType}Length`;\n      const newRemainingTime = this.state[lengthKey] * 60;\n      this.playAudio();\n\n      this.setState({\n        activeSessionType: nextSessionType,\n        autoplayAudio: true,\n        remainingTime: newRemainingTime,\n      });\n    }\n  }\n\n  activateTimer() {\n    this.setState(\n      {\n        timerIsActive: true,\n        errorMessage: '',\n      },\n      () => {\n        interval = setInterval(this.handleCountdown, 1000);\n      }\n    );\n  }\n\n  onIntervalChange(property, value) {\n    this.setState(\n      {\n        [property]: value,\n      },\n      this.resetTimer\n    );\n  }\n\n  timerLengthsAreValid() {\n    if (!this.state.sessionLength || !this.state.breakLength) {\n      return false;\n    }\n\n    return true;\n  }\n\n  handleStartStopClick() {\n    if (!this.timerLengthsAreValid()) {\n      this.setState({\n        errorMessage: 'Please enter valid session lengths.',\n      });\n      return;\n    }\n\n    if (!this.state.timerIsActive) {\n      this.activateTimer();\n    } else {\n      this.pauseTimer();\n    }\n  }\n\n  handleResetClick() {\n    this.setState(INITIAL_INTERVALS, this.resetTimer);\n  }\n\n  render() {\n    return (\n      <PomodoroWrapper>\n        <PomodoroInner>\n          <Heading>Pomodoro</Heading>\n          <TimerConfig\n            errorMessage={this.state.errorMessage}\n            onIntervalChange={this.onIntervalChange}\n            breakLength={this.state.breakLength}\n            sessionLength={this.state.sessionLength}\n          />\n          <Timer\n            activeSessionType={this.state.activeSessionType}\n            timerIsActive={this.state.timerIsActive}\n            remainingTime={this.state.remainingTime}\n            handleResetClick={this.handleResetClick}\n            handleStartStopClick={this.handleStartStopClick}\n          />\n          <audio id=\"beep\" src={soundUrl} />\n        </PomodoroInner>\n      </PomodoroWrapper>\n    );\n  }\n}\n\nexport default Pomodoro;\n","const FormError = (props) => {\n  return <p>{props.message}</p>;\n};\n\nexport default FormError;\n","import React from 'react';\nimport { navigate } from '@reach/router';\nimport firebase from 'firebase';\nimport FormError from '../components/FormError';\nimport { Form } from '../style';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      password: '',\n      errorMessage: '',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const { email, password } = this.state;\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .then((userCredential) => {\n        this.props.logInUser(userCredential.user);\n        navigate('/');\n      })\n      .catch((error) => {\n        if (error.message !== null) {\n          this.setState({\n            errorMessage: error.message,\n          });\n        } else {\n          this.setState({\n            errorMessage: null,\n          });\n        }\n      });\n  }\n\n  render() {\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        {this.state.errorMessage && (\n          <FormError message={this.state.errorMessage} />\n        )}\n        <label className=\"form__label\" htmlFor=\"email\">\n          Email Address\n        </label>\n        <input\n          className=\"form__control\"\n          id=\"email\"\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Email Address\"\n          onChange={this.handleChange}\n          value={this.state.email}\n          required\n        ></input>\n\n        <label className=\"form__label\" htmlFor=\"password\">\n          Password\n        </label>\n        <input\n          className=\"form__control\"\n          id=\"password\"\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"Password\"\n          onChange={this.handleChange}\n          value={this.state.password}\n          required\n        ></input>\n\n        <button type=\"submit\">Login</button>\n      </Form>\n    );\n  }\n}\n\nexport default Login;\n","import React from 'react';\nimport FormError from '../components/FormError';\nimport firebase from '../Firebase';\nimport { Form } from '../style';\n\nclass Register extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      displayName: '',\n      email: '',\n      password: '',\n      passwordConfirm: '',\n      errorMessage: null,\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    const itemName = event.target.name;\n    const value = event.target.value;\n\n    this.setState(\n      {\n        [itemName]: value,\n      },\n      () => {\n        if (this.state.password !== this.state.passwordConfirm) {\n          this.setState({ errorMessage: 'Passwords do not match' });\n        } else {\n          this.setState({ errorMessage: null });\n        }\n      }\n    );\n  }\n\n  handleSubmit(event) {\n    const registrationInfo = {\n      displayName: this.state.displayName,\n      email: this.state.email,\n      password: this.state.password,\n    };\n\n    event.preventDefault();\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(\n        registrationInfo.email,\n        registrationInfo.password\n      )\n      .then(() => {\n        this.props.registerUser(registrationInfo.displayName);\n      })\n      .catch((error) => {\n        if (error.message !== null) {\n          this.setState({\n            errorMessage: error.message,\n          });\n        } else {\n          this.setState({\n            errorMessage: null,\n          });\n        }\n      });\n  }\n\n  render() {\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        {this.state.errorMessage && (\n          <FormError message={this.state.errorMessage} />\n        )}\n        <label className=\"form__label\" htmlFor=\"display-name\">\n          Display Name\n        </label>\n        <input\n          className=\"form__control\"\n          id=\"displayName\"\n          type=\"text\"\n          name=\"displayName\"\n          placeholder=\"Display Name\"\n          onChange={this.handleChange}\n          value={this.state.displayName}\n          required\n        ></input>\n\n        <label className=\"form__label\" htmlFor=\"email\">\n          Email Address\n        </label>\n        <input\n          className=\"form__control\"\n          id=\"email\"\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Email Address\"\n          onChange={this.handleChange}\n          value={this.state.email}\n          required\n        ></input>\n\n        <label className=\"form__label\" htmlFor=\"password\">\n          Password\n        </label>\n        <input\n          className=\"form__control\"\n          id=\"password\"\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"Password\"\n          onChange={this.handleChange}\n          value={this.state.password}\n          required\n        ></input>\n\n        <label className=\"form__label\" htmlFor=\"passwordConfirm\">\n          Confirm Password\n        </label>\n        <input\n          className=\"form__control\"\n          id=\"passwordConfirm\"\n          type=\"password\"\n          name=\"passwordConfirm\"\n          placeholder=\"Password\"\n          onChange={this.handleChange}\n          value={this.state.passwordConfirm}\n          required\n        ></input>\n\n        <button type=\"submit\">Register</button>\n      </Form>\n    );\n  }\n}\n\nexport default Register;\n","import { Router, navigate } from '@reach/router';\nimport React from 'react';\nimport firebase from './Firebase';\nimport Navigation from './components/Navigation';\nimport Pomodoro from './pages/Pomodoro';\nimport Login from './pages/Login.js';\nimport Register from './pages/Register.js';\nimport { Main } from './style';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: null,\n      displayName: null,\n      userID: null,\n    };\n\n    this.registerUser = this.registerUser.bind(this);\n    this.logoutUser = this.logoutUser.bind(this);\n    this.logInUser = this.logInUser.bind(this);\n  }\n\n  logoutUser(event) {\n    event.preventDefault();\n    this.setState({\n      displayName: null,\n      user: null,\n      userID: null,\n    });\n\n    firebase\n      .auth()\n      .signOut()\n      .then(() => {\n        navigate('/login');\n      });\n  }\n\n  logInUser(user) {\n    this.setState({\n      user: user,\n      displayName: user.displayName,\n      userID: user.uid,\n    });\n  }\n\n  registerUser(displayName) {\n    firebase.auth().onAuthStateChanged((user) => {\n      user\n        .updateProfile({\n          displayName: displayName,\n        })\n        .then(() => {\n          this.setState({\n            user: user,\n            displayName: user.displayName,\n            userID: user.uid,\n          });\n        });\n\n      navigate('/');\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <Navigation user={this.state.user} logoutUser={this.logoutUser} />\n        <Main>\n          <Router>\n            <Pomodoro path=\"/\" />\n            <Login path=\"/login\" logInUser={this.logInUser} />\n            <Register path=\"/register\" registerUser={this.registerUser} />\n          </Router>\n        </Main>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}