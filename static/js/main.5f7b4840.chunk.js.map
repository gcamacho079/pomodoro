{"version":3,"sources":["styleSettings.js","style.js","utils/formatTime.js","Timer.js","utils/getNewValue.js","TimerConfig.js","beep.wav","utils/capitalizeFirstLetter.js","Pomodoro.js","index.js"],"names":["styleSettings","colors","primary","secondary","fonts","heading","body","units","spacer","spacer_large","spacer_small","Button","styled","button","TimeControls","div","Label","label","ErrorMessage","ControlRow","TimerLabel","h2","ButtonRow","TimerCountdown","TimerWrapper","addLeadingZeroes","value","string","slice","formatTime","totalSeconds","minutes","Math","floor","seconds","minutesString","secondsString","Timer","props","id","activeSessionType","remainingTime","onClick","handleResetClick","handleStartStopClick","timerIsActive","getNewValue","currentValue","action","newValue","labelText","getStateProperty","property","includes","getInputMin","input","parseInt","getAttribute","getInputMax","TimerConfig","handleClick","bind","handleChange","event","target","stateProp","valueInt","this","onIntervalChange","Number","isNaN","inputMin","inputMax","dataset","targetInput","parentNode","querySelector","errorMessage","htmlFor","data-action","aria-label","onChange","min","max","type","breakLength","sessionLength","React","Component","capitalizeFirstLetter","s","charAt","toUpperCase","interval","PomodoroWrapper","main","Heading","h1","INITIAL_INTERVALS","Pomodoro","state","timer","handleCountdown","document","title","rewindAudio","setState","clearInterval","play","audioElement","pause","currentTime","newRemainingTime","nextSessionType","getNextSessionType","lengthKey","playAudio","autoplayAudio","setInterval","resetTimer","timerLengthsAreValid","pauseTimer","activateTimer","src","soundUrl","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5f7b4840.chunk.js","sourcesContent":["const styleSettings = {\n  colors: {\n    primary: '#FFDDFF',\n    secondary: '#442C81',\n  },\n  fonts: {\n    heading: 'Rakkas, serif',\n    body: 'Cairo, sans-serif',\n  },\n  units: {\n    spacer: '30px',\n    spacer_large: '60px',\n    spacer_small: '15px',\n  }  \n};\n\nexport default styleSettings;\n","import styled from 'styled-components';\nimport styleSettings from './styleSettings';\n\nexport const Button = styled.button`\n  background-color: transparent;\n  color: black;\n  border-color: black;\n  border-width: 3px;\n  padding: 5px;\n  letter-spacing: 1px;\n  text-transform: uppercase;\n  font-size: 18px;\n  font-weight: 700;\n  cursor: pointer;\n`;\n\nexport const TimeControls = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n`;\n\nexport const Label = styled.label`\n  font-size: 20px;\n  text-align: center;\n  display: block;\n  margin-bottom: ${styleSettings.units.spacer_small};\n`;\n\nexport const ErrorMessage = styled.div`\n  margin: ${styleSettings.units.spacer} 0;\n  font-weight: 700;\n  text-align: center;\n`;\n\nexport const ControlRow = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-column-gap: ${styleSettings.units.spacer};\n`;\n\nexport const TimerLabel = styled.h2`\n  text-align: center;\n`;\n\nexport const ButtonRow = styled.div`\n  display: grid;\n  grid-column-gap: 30px;\n  grid-template-columns: 1fr 1fr;\n`;\n\nexport const TimerCountdown = styled.div`\n  margin: ${styleSettings.units.spacer} 0;\n  font-size: 48px;\n  text-align: center;\n`;\n\nexport const TimerWrapper = styled.div`\n  margin: ${styleSettings.units.spacer_large} 0;\n`;\n","const addLeadingZeroes = (value) => {\n  let string = value + '';\n  string = '00' + string;\n  const finalDigits = string.slice(-2);\n  return finalDigits;\n};\n\nconst formatTime = (totalSeconds) => {\n  const minutes = Math.floor(totalSeconds / 60);\n  const seconds = totalSeconds % 60;\n\n  const minutesString = addLeadingZeroes(minutes);\n  const secondsString = addLeadingZeroes(seconds);\n\n  const timeString = `${minutesString}:${secondsString}`;\n  return timeString;\n};\n\nexport default formatTime;\n","import {\n  Button,\n  TimerLabel,\n  ButtonRow,\n  TimerCountdown,\n  TimerWrapper,\n} from './style';\nimport formatTime from './utils/formatTime';\n\nconst Timer = (props) => {\n  return (\n    <TimerWrapper>\n      <TimerLabel id=\"timer-label\">\n        {props.activeSessionType === 'session' ? 'Session' : 'Break'}\n      </TimerLabel>\n      <TimerCountdown id=\"time-left\">\n        {formatTime(props.remainingTime)}\n      </TimerCountdown>\n      <ButtonRow>\n        <Button onClick={props.handleResetClick} id=\"reset\">\n          Reset\n        </Button>\n        <Button onClick={props.handleStartStopClick} id=\"start_stop\">\n          {props.timerIsActive ? 'Stop' : 'Start'}\n        </Button>\n      </ButtonRow>\n    </TimerWrapper>\n  );\n};\n\nexport default Timer;\n","const getNewValue = (currentValue, action) => {\n  let newValue;\n  switch(action) {\n    case 'increment':\n      newValue = currentValue + 1;\n      break;\n    case 'decrement':\n      newValue = currentValue - 1;\n      break;\n    default:\n      newValue = currentValue;\n  }\n  return newValue;\n};\n\nexport default getNewValue;\n","import React from 'react';\nimport getNewValue from './utils/getNewValue';\nimport { Button, TimeControls, Label, ErrorMessage, ControlRow } from './style';\n\nexport const labelText = {\n  increment: 'Add 1 minute',\n  decrement: 'Remove 1 minute',\n};\n\nconst getStateProperty = (id) => {\n  let property = '';\n\n  if (id.includes('break')) {\n    property = 'breakLength';\n  } else if (id.includes('session')) {\n    property = 'sessionLength';\n  }\n\n  return property;\n};\n\nconst getInputMin = (input) => parseInt(input.getAttribute('min'), 10);\n\nconst getInputMax = (input) => parseInt(input.getAttribute('max'), 10);\nclass TimerConfig extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    const { target } = event;\n    const stateProp = getStateProperty(target.id);\n    const { value } = target;\n    const valueInt = parseInt(value, 10);\n\n    // Allow user to delete input entirely and type from scratch\n    // (TODO: handle error in Pomodoro component)\n    if (value === '') return this.props.onIntervalChange(stateProp, value);\n\n    // Do nothing if input is non-empty string\n    if (Number.isNaN(valueInt)) return this.props[stateProp];\n\n    const inputMin = getInputMin(target);\n    const inputMax = getInputMax(target);\n\n    if (valueInt < inputMin || valueInt > inputMax) return;\n\n    this.props.onIntervalChange(stateProp, valueInt);\n  }\n\n  handleClick(event) {\n    const { target } = event;\n    const { action } = target.dataset;\n    const parentNode = target.parentNode;\n    const targetInput = parentNode.querySelector('input');\n    const stateProp = getStateProperty(target.id);\n    const newValue = getNewValue(this.props[stateProp], action);\n    const inputMin = getInputMin(targetInput);\n    const inputMax = getInputMax(targetInput);\n\n    if (newValue < inputMin || newValue > inputMax) return;\n\n    this.props.onIntervalChange(stateProp, newValue);\n  }\n\n  render() {\n    return (\n      <>\n        <ErrorMessage>{this.props.errorMessage}</ErrorMessage>\n        <ControlRow>\n          <div>\n            <Label id=\"break-label\" htmlFor=\"break-length\">\n              Break Length\n            </Label>\n            <TimeControls>\n              <Button\n                onClick={this.handleClick}\n                data-action=\"decrement\"\n                id=\"break-decrement\"\n                aria-label={labelText.decrement}\n              >\n                -\n              </Button>\n              <input\n                onChange={this.handleChange}\n                min=\"1\"\n                max=\"60\"\n                type=\"number\"\n                id=\"break-length\"\n                value={this.props.breakLength}\n              />\n              <Button\n                onClick={this.handleClick}\n                data-action=\"increment\"\n                id=\"break-increment\"\n                aria-label={labelText.increment}\n              >\n                +\n              </Button>\n            </TimeControls>\n          </div>\n          <div>\n            <Label id=\"session-label\" htmlFor=\"session-length\">\n              Session Length\n            </Label>\n            <TimeControls>\n              <Button\n                onClick={this.handleClick}\n                data-action=\"decrement\"\n                id=\"session-decrement\"\n                aria-label={labelText.decrement}\n              >\n                -\n              </Button>\n              <input\n                onChange={this.handleChange}\n                min=\"1\"\n                max=\"60\"\n                type=\"number\"\n                id=\"session-length\"\n                value={this.props.sessionLength}\n              />\n              <Button\n                onClick={this.handleClick}\n                data-action=\"increment\"\n                id=\"session-increment\"\n                aria-label={labelText.increment}\n              >\n                +\n              </Button>\n            </TimeControls>\n          </div>\n        </ControlRow>\n      </>\n    );\n  }\n}\n\nexport default TimerConfig;\n","export default __webpack_public_path__ + \"static/media/beep.0be65f23.wav\";","const capitalizeFirstLetter = (s) => {\n  return s.charAt(0).toUpperCase() + s.slice(1);\n};\n\nexport default capitalizeFirstLetter;\n","import React from 'react';\nimport Timer from './Timer';\nimport TimerConfig from './TimerConfig';\nimport soundUrl from './beep.wav';\nimport styled from 'styled-components';\nimport styleSettings from './styleSettings';\nimport formatTime from './utils/formatTime';\nimport capitalizeFirstLetter from './utils/capitalizeFirstLetter';\n\nconst PomodoroWrapper = styled.main`\n  font-family: ${styleSettings.fonts.body};\n  max-width: 600px;\n  background-color: ${styleSettings.colors.primary};\n  color: #000000;\n  padding: 30px;\n  margin: 30px auto;\n  box-shadow: 5px 5px 0;\n`;\n\nconst Heading = styled.h1`\n  text-align: center;\n  font-size: 48px;\n  font-family: ${styleSettings.fonts.heading};\n`;\n\nconst INITIAL_INTERVALS = {\n  sessionLength: 25,\n  breakLength: 5,\n};\n\nlet interval;\nclass Pomodoro extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeSessionType: 'session',\n      breakLength: 5,\n      errorMessage: '',\n      sessionLength: 25,\n      remainingTime: 1500,\n      timerIsActive: false,\n      timer: null,\n    };\n\n    this.onIntervalChange = this.onIntervalChange.bind(this);\n    this.handleCountdown = this.handleCountdown.bind(this);\n    this.handleStartStopClick = this.handleStartStopClick.bind(this);\n    this.handleResetClick = this.handleResetClick.bind(this);\n  }\n\n  resetTimer(resetToInitial = false) {\n    document.title = 'Pomodoro';\n    this.rewindAudio();\n    this.setState(\n      {\n        timerIsActive: false,\n        remainingTime: this.state.sessionLength * 60,\n        activeSessionType: 'session',\n      },\n      () => {\n        clearInterval(interval);\n      }\n    );\n  }\n\n  pauseTimer() {\n    this.setState(\n      {\n        timerIsActive: false,\n      },\n      () => {\n        clearInterval(interval);\n      }\n    );\n  }\n\n  playAudio() {\n    const audioElement = document.querySelector('#beep');\n    audioElement.play();\n  }\n\n  rewindAudio() {\n    const audioElement = document.querySelector('#beep');\n    audioElement.pause();\n    audioElement.currentTime = 0;\n  }\n\n  getNextSessionType() {\n    switch (this.state.activeSessionType) {\n      case 'session':\n        return 'break';\n      case 'break':\n        return 'session';\n      default:\n        return 'session';\n    }\n  }\n\n  handleCountdown() {\n    if (this.state.remainingTime !== 0) {\n      const { activeSessionType } = this.state;\n      const newRemainingTime = this.state.remainingTime - 1;\n      document.title = `${capitalizeFirstLetter(\n        activeSessionType\n      )}: ${formatTime(newRemainingTime)}`;\n      this.setState({\n        remainingTime: newRemainingTime,\n      });\n    } else {\n      const nextSessionType = this.getNextSessionType();\n      const lengthKey = `${nextSessionType}Length`;\n      const newRemainingTime = this.state[lengthKey] * 60;\n      this.playAudio();\n\n      this.setState({\n        activeSessionType: nextSessionType,\n        autoplayAudio: true,\n        remainingTime: newRemainingTime,\n      });\n    }\n  }\n\n  activateTimer() {\n    this.setState(\n      {\n        timerIsActive: true,\n        errorMessage: '',\n      },\n      () => {\n        interval = setInterval(this.handleCountdown, 1000);\n      }\n    );\n  }\n\n  onIntervalChange(property, value) {\n    this.setState(\n      {\n        [property]: value,\n      },\n      this.resetTimer\n    );\n  }\n\n  timerLengthsAreValid() {\n    if (!this.state.sessionLength || !this.state.breakLength) {\n      return false;\n    }\n\n    return true;\n  }\n\n  handleStartStopClick() {\n    if (!this.timerLengthsAreValid()) {\n      this.setState({\n        errorMessage: 'Please enter valid session lengths.',\n      });\n      return;\n    }\n\n    if (!this.state.timerIsActive) {\n      this.activateTimer();\n    } else {\n      this.pauseTimer();\n    }\n  }\n\n  handleResetClick() {\n    this.setState(INITIAL_INTERVALS, this.resetTimer);\n  }\n\n  render() {\n    return (\n      <PomodoroWrapper>\n        <Heading>Pomodoro</Heading>\n        <TimerConfig\n          errorMessage={this.state.errorMessage}\n          onIntervalChange={this.onIntervalChange}\n          breakLength={this.state.breakLength}\n          sessionLength={this.state.sessionLength}\n        />\n        <Timer\n          activeSessionType={this.state.activeSessionType}\n          timerIsActive={this.state.timerIsActive}\n          remainingTime={this.state.remainingTime}\n          handleResetClick={this.handleResetClick}\n          handleStartStopClick={this.handleStartStopClick}\n        />\n        <audio id=\"beep\" src={soundUrl} />\n      </PomodoroWrapper>\n    );\n  }\n}\n\nexport default Pomodoro;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Pomodoro from './Pomodoro';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Pomodoro />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}